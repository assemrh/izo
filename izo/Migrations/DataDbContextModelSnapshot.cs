// <auto-generated />
using System;
using izo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace izo.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("izo.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d32ef16-a1f5-484f-ae08-880ce97e9cd6"),
                            Name = "Example Course 1"
                        },
                        new
                        {
                            Id = new Guid("7a0315ef-c614-40e0-b66c-1a629e5b1025"),
                            Name = "Example Course 2"
                        },
                        new
                        {
                            Id = new Guid("b8b83056-625e-480b-8264-8348a5d31d04"),
                            Name = "Example Course 3"
                        },
                        new
                        {
                            Id = new Guid("6985ca2a-5394-4b07-9408-e2a7e50ce75e"),
                            Name = "Example Course 4"
                        },
                        new
                        {
                            Id = new Guid("3e1b71ed-34b7-48fb-ae65-f8a0722b3abf"),
                            Name = "Example Course 5"
                        });
                });

            modelBuilder.Entity("izo.Models.ExamResult", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("izo.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GsmNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("121aab8d-56da-42be-b699-34cce87368d7"),
                            FullName = "David C. Hunter",
                            Number = 0
                        },
                        new
                        {
                            Id = new Guid("e9079439-4306-4f8e-ae4e-6a1363025dc4"),
                            FullName = "Carlos Waterslide",
                            Number = 0
                        },
                        new
                        {
                            Id = new Guid("46793e18-d77d-46d3-8ef1-687526405d7c"),
                            FullName = "Luke Sexgator",
                            Number = 0
                        },
                        new
                        {
                            Id = new Guid("55369196-c3fe-4313-98ca-6a7262c04775"),
                            FullName = "Hector McHector",
                            Number = 0
                        });
                });

            modelBuilder.Entity("izo.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee55933d-bd9b-4cbe-a6be-16f0ec75422c"),
                            Email = "admin@domain.tld",
                            FullName = "Admin",
                            Password = "Usr@12345",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("izo.Models.ExamResult", b =>
                {
                    b.HasOne("izo.Models.Course", "Course")
                        .WithMany("ExamResults")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("izo.Models.Student", "Student")
                        .WithMany("ExamResults")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("izo.Models.Course", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("izo.Models.Student", b =>
                {
                    b.Navigation("ExamResults");
                });
#pragma warning restore 612, 618
        }
    }
}
